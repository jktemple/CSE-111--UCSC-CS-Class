==17017== Memcheck, a memory error detector
==17017== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==17017== Using Valgrind-3.17.0 and LibVEX; rerun with -h for copyright info
==17017== Command: ./yshell
==17017== 
yshell: Bad: no such command
==17017== 
==17017== HEAP SUMMARY:
==17017==     in use at exit: 1,238 bytes in 33 blocks
==17017==   total heap usage: 244 allocs, 211 frees, 9,067 bytes allocated
==17017== 
==17017== 1,238 (40 direct, 1,198 indirect) bytes in 1 blocks are definitely lost in loss record 12 of 12
==17017==    at 0x4C2B788: operator new(unsigned long) (vg_replace_malloc.c:417)
==17017==    by 0x416379: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
==17017==    by 0x415B28: allocate (allocator.h:197)
==17017==    by 0x415B28: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:460)
==17017==    by 0x4153F3: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:97)
==17017==    by 0x414DE8: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<inode, std::allocator<inode>, file_type>(inode*&, std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr_base.h:648)
==17017==    by 0x414813: std::__shared_ptr<inode, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<inode>, file_type>(std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr_base.h:1342)
==17017==    by 0x413F5A: std::shared_ptr<inode>::shared_ptr<std::allocator<inode>, file_type>(std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr.h:409)
==17017==    by 0x4136E8: std::shared_ptr<inode> std::allocate_shared<inode, std::allocator<inode>, file_type>(std::allocator<inode> const&, file_type&&) (shared_ptr.h:863)
==17017==    by 0x412C7E: std::shared_ptr<inode> std::make_shared<inode, file_type>(file_type&&) (shared_ptr.h:879)
==17017==    by 0x411801: inode_state::inode_state() (file_sys.cpp:24)
==17017==    by 0x418258: main (main.cpp:49)
==17017== 
==17017== LEAK SUMMARY:
==17017==    definitely lost: 40 bytes in 1 blocks
==17017==    indirectly lost: 1,198 bytes in 32 blocks
==17017==      possibly lost: 0 bytes in 0 blocks
==17017==    still reachable: 0 bytes in 0 blocks
==17017==         suppressed: 0 bytes in 0 blocks
==17017== 
==17017== For lists of detected and suppressed errors, rerun with: -s
==17017== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
